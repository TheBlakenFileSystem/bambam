package main

import (
	"fmt"
	"os"
	"reflect"
    "bytes"
	"github.com/glycerine/go-goon"
)

// used in rw3_test.go for round-trip testing write/read

// demonstrate anonymous (embedded) structs,
// as well as pointers to structs and
// also just nested structs.

type Anon struct {
   SerialNum int
}

type Dude struct {
    Anon
    Name string
    Age  int
    Addr *Address
    Fro Hair
}

type Address struct {
    Street string
    Zip    string
}
 
type Hair struct {
  Desc string
}


func main() {

	rw := Dude{
        Name: "Hank",
        Age: 33,
        Addr: &Address{Street: "123 Main Street", Zip: "11111"},
        Anon: Anon{SerialNum: 52},
        Fro: Hair{ Desc: "awesome"},
	}

	var o bytes.Buffer
	rw.Save(&o)

    rw2 := &Dude{}
	rw2.Load(&o)

	if !reflect.DeepEqual(&rw, rw2) {
		fmt.Printf("rw and rw2 were not equal!\n")

		fmt.Printf("\n\n =============  rw: ====\n")
		goon.Dump(rw)
		fmt.Printf("\n\n =============  rw2: ====\n")
		goon.Dump(rw2)
		fmt.Printf("\n\n ================\n")

		os.Exit(1)
	}

	fmt.Printf("Load() data matched Saved() data.\n")
}
